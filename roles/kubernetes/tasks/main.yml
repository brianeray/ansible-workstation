---
- name: Add apt key
  ansible.builtin.apt_key:
    url: "{{ google_cloud_package_repo_base_url }}/apt/doc/apt-key.gpg"
    #Recommended per k8s over default /etc/apt/trusted.gpg.d/*.gpg
    keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg
    state: present

- name: Add apt repository
  ansible.builtin.apt_repository:
    #See note above about nonstandard keyfile location
    repo: "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] {{ kubernetes_package_repo_base_url }}/ kubernetes-xenial main"
    filename: kubernetes
    state: present

- name: Install it
  ansible.builtin.apt:
    name: kubectl
    state: present

- name: Create a kubeconfigs dir if necessary
  ansible.builtin.file:
    path: "{{ end_user_home }}/.kube/configs"
    state: directory
    owner: "{{ end_user }}"
    group: "{{ end_group }}"
    mode: 0775
  register: kubeconfigs_dir

- name: Find user kubeconfigs
  ansible.builtin.find:
    paths: "{{ kubeconfigs_dir.path }}"
    patterns:
      - '*.yml'
      - '*.yaml'
  register: kubeconfigs
  tags:
    - idempotency_check

- name: Clear KUBECONFIG variable in bash startup
  ansible.builtin.blockinfile:
    path: "{{ end_user_home }}/.bashrc"
    block: export KUBECONFIG=$KUBECONFIG
    marker: "# {mark} ANSIBLE MANAGED BLOCK - KUBECONFIG"
    state: present
  when: kubeconfigs.matched == 0

- name: Set KUBECONFIG variable in bash startup
  ansible.builtin.blockinfile:
    path: "{{ end_user_home }}/.bashrc"
    block: export KUBECONFIG=$KUBECONFIG:{{ kubeconfigs.files | map(attribute='path') | join(':') }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK - KUBECONFIG"
    state: present
  when: kubeconfigs.matched > 0
